/**************************************************
 * 氣泡排序法
 * 
* 說明:
* 最常使用的排序演算法
* 將元素與右邊的元素逐一往右兩兩比對，若左邊元素較大則與右邊元素置換
* 每一輪的比對範圍內的最大元素會置換到範圍內的末位
* 
* 最壞時間: O(n²)
* 平均時間: O(n²)
* 額外空間: O(1)
* 
* 排序方式: 穩定排序
* 使用時機: n的數量小 
**************************************************/


public class BubbleSort : ISortAlgorithm
{

    public override void Sort(int[] data)
    {
        var n = data.Length;
        var flag = true;
        int i, j;

        // 第一層迴圈決定要比對的次數，而 i 也決定了第二層迴圈的終點
        for(i = 1; i < n && flag; i++)
        {
            // 判斷是否結束排序的 flag
            flag = false;

            // 第二層迴圈會從第一個元素比對右邊鄰近的元素
            // 之後再從第二個元素與其右邊元素進行比對，依此類推
            for(j = 0; j < n - i; j++)
            {
                // 當比對的元素大於右邊相鄰的元素，則進行置換
                if(data[j] > data[j + 1])
                {
                    Swap(data, j, j + 1);
                    flag = true;
                }
            }
        }
    }

}
